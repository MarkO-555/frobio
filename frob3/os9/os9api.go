package main

type call struct {
	name                   string
	desc                   string
	number                 byte
	a, b, d, x, y, u       string
	ra, rb, rd, rx, ry, ru string

	a_off, b_off, d_off, x_off, y_off, u_off       int
	ra_off, rb_off, rd_off, rx_off, ry_off, ru_off int
}

var Calls = []*call{
	{
		name:   "F$Link",
		desc:   "Link a memory module",
		number: 0x00,
		a:      "lang_and_type",
		x:      "module_name_ptr",
		ra:     "lang_and_type",
		rb:     "attr_and_rev",
		rx:     "after_module_name",
		ry:     "absolute_entry_addr",
		ru:     "absolute_header_addr",
	},
	{
		name:   "F$Load",
		desc:   "Load a module from a file",
		number: 0x01,
		a:      "lang_and_type_code",
		x:      "module_name_ptr",
		ra:     "lang_and_type",
		rb:     "attr_and_rev",
		rx:     "after_module_name",
		ry:     "absolute_entry_addr",
		ru:     "absolute_header_addr",
	},
	{
		name:   "F$MapBlk",
		desc:   "Map mem blocks into process space",
		number: 0x4F,
		b:      "num_blocks",
		x:      "first_block",
		ru:     "addr_of_first_block",
	},
	{
		name:   "F$Mem",
		desc:   "Change process data area size",
		number: 0x07,
		d:      "num_bytes_wanted",
		ry:     "end_of_memory",
		rd:     "actual_num_bytes",
	},
	{
		name:   "F$Sleep",
		desc:   "Sleep the process",
		number: 0x0A,
		x:      "num_ticks",
		rx:     "num_ticks_left",
	},
	{
		name:   "F$Wait",
		desc:   "Wait for child death",
		number: 0x04,
		ra:     "child_process_id",
		rb:     "child_exit_status",
	},
	{
		name:   "I$Close",
		desc:   "Close I/O path",
		number: 0x8F,
		a:      "path",
	},
	{
		name:   "I$Create",
		desc:   "Create and open file",
		number: 0x83,
		a:      "access_mode",
		b:      "attrs",
		x:      "pathname",
		ra:     "path",
		rx:     "after_pathname",
	},
	{
		name:   "I$Delete",
		desc:   "Delete a file",
		number: 0x87,
		x:      "pathname",
		rx:     "after_pathname",
	},
	{
		name:   "I$DeleteX",
		desc:   "Delete a file from cwd or cxd",
		number: 0x87,
		a:      "access_mode",
		x:      "pathname",
		rx:     "after_pathname",
	},
	{
		name:   "I$Dup",
		desc:   "Return a synonymous path number",
		number: 0x82,
		a:      "path",
		ra:     "new_path",
	},
	{
		name:   "I$MakDir",
		desc:   "Create a directory",
		number: 0x85,
		b:      "function_code",
		x:      "pathname",
		rx:     "after_pathname",
	},
	{
		name:   "I$ModDsc", // EOU Beta 5
		desc:   "Modify bytes in file desc",
		number: 0x91,
		b:      "num_bytes_to_change",
		x:      "module_name",
		u:      "offset_and_data_byte_pairs",
	},
	{
		name:   "I$Open",
		desc:   "Open a file",
		number: 0x84,
		a:      "access_mode",
		x:      "pathname",
		ra:     "path",
		rx:     "after_pathname",
	},
	{
		name:   "I$Read",
		desc:   "Read from file",
		number: 0x89,
		a:      "path",
		x:      "buffer",
		y:      "num_bytes",
		ry:     "actual_num_bytes",
	},
	{
		name:   "I$ReadLn",
		desc:   "Read line from file",
		number: 0x8B,
		a:      "path",
		x:      "buffer",
		y:      "num_bytes",
		ry:     "actual_num_bytes",
	},
	{
		name:   "I$Write",
		desc:   "Write to file",
		number: 0x8A,
		a:      "path",
		x:      "buffer",
		y:      "num_bytes",
		ry:     "actual_num_bytes",
	},
	{
		name:   "I$WritLn",
		desc:   "Write line to file",
		number: 0x8C,
		a:      "path",
		x:      "buffer",
		y:      "num_bytes",
		ry:     "actual_num_bytes",
	},
	{
		name:   "I$Seek",
		desc:   "Seek position in file",
		number: 0x88,
		a:      "path",
		x:      "upper_16_bits",
		u:      "lower_16_bits",
	},
	{
		name:   "I$GetStt",
		desc:   "Get status",
		number: 0x8D,
		a:      "path",
		b:      "function_code",
		x:      "x_arg",
		y:      "y_arg",
		u:      "u_arg",
		rd:     "d_result",
		rx:     "x_result",
		ry:     "y_result",
		ru:     "u_result",
	},
	{
		name:   "I$SetStt",
		desc:   "Set status",
		number: 0x8E,
		a:      "path",
		b:      "function_code",
		x:      "x_arg",
		y:      "y_arg",
		u:      "u_arg",
		rd:     "d_result",
		rx:     "x_result",
		ry:     "y_result",
		ru:     "u_result",
	},
}
