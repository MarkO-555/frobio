def Create
  x: const char* path
  a: mode
  b: attrs
  os9 0x83
  *a: char fd_out

def Open
  x: const char* path
  a: mode
  os9 0x84
  *a: char fd_out

def Delete
  x: const char* path
  os9 I_DELETE

def ChgDir
  x: const char* path
  os9 I_CHGDIR

def MakDir
  x: const char* path
  b: attrs
  os9 I_MAKDIR

def GetStt
  a: path
  b: func
  x: x_in
  u: u_in
  os9 I_GETSTT
  *d: d_out
  *x: x_out
  *u: u_out

def SetStt
  a: byte path
  b: byte func
  x: x_in
  u: u_in
  os9 I_GETSTT
  *d: d_out
  *x: x_out
  *u: u_out

def Read
  a: path
  x: buf
  y: bufLen
  os9 I_READ
  *y: bytes_read_out

def ReadLn
  a: path
  x: buf
  y: bufLen
  os9 I_READLN
  *y: bytes_read_out

def Write
  a: path
  x: buf
  y: bufLen
  os9 I_WRITE
  *y: bytes_written_out

def WritLn
  a: path
  x: buf
  y: bufLen
  os9 I_WRITLN
  *y: bytes_written_out

def Dup
  a: path
  os9 I_DUP
  *a: newPath_out

def Close
  a: path
  os9 I_CLOSE

def Sleep
  x: ticks
  os9 F_SLEEP

def Wait
  os9 F_WAIT
  *a: childId_out
  *b: exitStatus_out

def Fork
  x: program
  u: params
  y: paramsLen
  a: langAndType
  b: mem_size
  os9 F_FORK
  *a: newProcID_out

def Chain
  x: program
  u: params
  y: paramsLen
  a: langAndType
  b: mem_size
  os9 F_FORK

def Send
  a: processID
  b: signalCode
  os9 F_SEND

def STime
  x: byte* timePacket
  os9 F_STIME

def Mem
  d: desiredMemorySize
  os9 F_MEM
  *y: endOfNewMem_out
  *d: actualMemorySize_out

def AllRam
  b: numBlocks
  os9 F_ALLRAM
  *d: startBlock_out

def DelRam
  b: numBlocks
  x: startBlock
  os9 F_DELRAM

def MapBlk
  x: startingBlock
  b: numBlocks
  os9 F_MAPBLK
  *u: firstAddress_out

def ClrBlk
  x: firstAddress
  b: numBlocks
  os9 F_CLRBLK

def ID
  os9 F_ID
  *a: procId_out
  *y: userId_out

def All64 -krn
  x: base
  os9 F_ALL64
  *x: base_out
  *y: blockAddr_out
  *a: blockNum_out

def Find64 -krn
  a: blockNum
  x: base
  os9 F_FIND64
  *y: blockAddr_out

def Ret64 -krn
  a: blockNum
  x: base
  os9 F_RET64

